<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="_printer_8cs" kind="file">
    <compoundname>Printer.cs</compoundname>
    <innerclass refid="classgeneral_1_1_printer" prot="public">general::Printer</innerclass>
    <innernamespace refid="namespacegeneral">general</innernamespace>
    <innernamespace refid="namespace_system_1_1_collections">System::Collections</innernamespace>
    <innernamespace refid="namespace_system_1_1_threading">System::Threading</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Threading;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">general{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classgeneral_1_1_printer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgeneral_1_1_printer" kindref="compound">Printer</ref><sp/>:<sp/>MarshalByRefObject,<sp/>IPrinter{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//Private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//Protected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classgeneral_1_1_printer_1accfe10173f1a51d483fb1d2ca5a85f8e" kindref="member">printerName</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Queue&lt;string&gt;<sp/>printerTasks<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Queue&lt;string&gt;();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>idle;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgeneral_1_1_printer_1a8a5efd620a05ac28d8900a92ea31e1e6" kindref="member">Printer</ref>(){</highlight></codeline>
<codeline lineno="18"><highlight class="normal">Console.WriteLine(</highlight><highlight class="stringliteral">&quot;Printer():<sp/>\t\t-New<sp/>Empty<sp/>Printer<sp/>created&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">idle<sp/>=<sp/><ref refid="classgeneral_1_1_printer_1a7864a34ad69b6a24a6141d8965a5461a" kindref="member">CheckIdle</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgeneral_1_1_printer_1a8a5efd620a05ac28d8900a92ea31e1e6" kindref="member">Printer</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classgeneral_1_1_printer_1accfe10173f1a51d483fb1d2ca5a85f8e" kindref="member">printerName</ref>){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="classgeneral_1_1_printer_1a09edb8deaba3af36f8edc7ab80a11af3" kindref="member">SetPrinterName</ref>(printerName);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">Console.WriteLine(</highlight><highlight class="stringliteral">&quot;Printer():<sp/>\t\t-New<sp/>Full<sp/>Printer<sp/>created<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="classgeneral_1_1_printer_1a9afebe239ae0a38bf0e7611e540986d0" kindref="member">GetPrinterName</ref>()<sp/>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">idle<sp/>=<sp/><ref refid="classgeneral_1_1_printer_1a7864a34ad69b6a24a6141d8965a5461a" kindref="member">CheckIdle</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//GETTERS<sp/>AND<sp/>SETTERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classgeneral_1_1_printer_1a9afebe239ae0a38bf0e7611e540986d0" kindref="member">GetPrinterName</ref>(){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgeneral_1_1_printer_1accfe10173f1a51d483fb1d2ca5a85f8e" kindref="member">printerName</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgeneral_1_1_printer_1a09edb8deaba3af36f8edc7ab80a11af3" kindref="member">SetPrinterName</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name){</highlight></codeline>
<codeline lineno="35"><highlight class="normal">printerName<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgeneral_1_1_printer_1a7864a34ad69b6a24a6141d8965a5461a" kindref="member">CheckIdle</ref>(){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this.printerTasks.Count<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>Console.WriteLine(</highlight><highlight class="stringliteral">&quot;CheckIdle():<sp/>\t\t-Set<sp/>to<sp/>Idle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>Console.WriteLine(</highlight><highlight class="stringliteral">&quot;CheckIdle():<sp/>\t\t-Set<sp/>to<sp/>Busy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgeneral_1_1_printer_1a5eeae884bd3c18be013cd11ae47c57b6" kindref="member">LoadPrintTask</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>printName){</highlight></codeline>
<codeline lineno="50"><highlight class="normal">printerTasks.Enqueue(printName);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idle<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>Console.WriteLine(</highlight><highlight class="stringliteral">&quot;LoadPrintTask():<sp/>\t-Busy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>Console.WriteLine(</highlight><highlight class="stringliteral">&quot;LoadPrintTask():<sp/>\t-Idle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeneral_1_1_printer_1a4f37fda001f50f3dd78d92c8370a1856" kindref="member">Print</ref>();<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgeneral_1_1_printer_1a4f37fda001f50f3dd78d92c8370a1856" kindref="member">Print</ref>(){</highlight></codeline>
<codeline lineno="60"><highlight class="normal">Thread.Sleep(1300);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">Console.WriteLine(printerTasks.Dequeue()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;PRINTED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classgeneral_1_1_printer_1a7864a34ad69b6a24a6141d8965a5461a" kindref="member">CheckIdle</ref>()){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgeneral_1_1_printer_1a4f37fda001f50f3dd78d92c8370a1856" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>Console.WriteLine<sp/>(</highlight><highlight class="stringliteral">&quot;Print()<sp/>\t\t-All<sp/>Tasks<sp/>Completed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Documents and Settings/SteinsGate/My Documents/GitHub/Sharerd-Printing/general/Printer.cs"/>
  </compounddef>
</doxygen>
